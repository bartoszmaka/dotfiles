{
  "ruby.useBundler": true, //run non-lint commands with bundle exec
  "ruby.useLanguageServer": true, // use the internal language server (see below)
  "ruby.lint": {
    "rubocop": {
      "useBundler": true, // enable rubocop via bundler
      "forceExclusion": true
    },
    "reek": {
      "useBundler": true // enable reek via bundler
    }
  },
  "ruby.format": "rubocop", // use rubocop for formatting
  "workbench.colorCustomizations": {
    "editorGroup.emptyBackground": "#1A212E",
    "editor.selectionBackground": "#401437",
    "statusBar.background": "#005f5f",
    "statusBar.noFolderBackground": "#005f5f",
    "statusBar.debuggingBackground": "#005f5f",
    "errorLens.errorBackground": "#e4545412",
    "errorLens.warningBackground": "#ff942f12",
    "errorLens.infoBackground": "#00b7e406",
    "errorLens.hintBackground": "#17a2a206",
    "editorIndentGuide.background": "#3B404800",
    "editorInfo.background": "#00000000"
  },
  "editor.tokenColorCustomizations": {
    "[onedark.nvim]": {
      "textMateRules": [
        {
          "name": "variable",
          "scope": "variable.other.ruby",
          "settings": {
            "foreground": "#93a4c3",
            "fontStyle": ""
          }
        }
      ]
    }
  },
  "files.insertFinalNewline": true,
  "cSpell.enabled": false,
  "workbench.commandPalette.preserveInput": true,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.colorTheme": "onedark.nvim",
  "debug.console.fontSize": 14,
  "editor.tabSize": 2,
  "editor.formatOnSave": false,
  "editor.mouseWheelZoom": false,
  "editor.fontSize": 14,
  "terminal.integrated.fontSize": 14,
  "editor.lineHeight": 22,
  "terminal.integrated.fontFamily": "'Hasklug Nerd Font Mono', monospace",
  "editor.fontFamily": "'Hasklug Nerd Font Mono',  monospace",
  "editor.fontLigatures": false,
  "editor.renderWhitespace": "trailing",
  "editor.cursorStyle": "block",
  "editor.minimap.scale": 2,
  "workbench.editor.enablePreview": false,
  "explorer.confirmDelete": false,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.panel.defaultLocation": "bottom",
  "material-icon-theme.hidesExplorerArrows": true,
  "editor.cursorSurroundingLines": 4,
  "editor.autoClosingQuotes": "always",
  "editor.autoSurround": "languageDefined",
  "editor.snippetSuggestions": "top",
  "editor.acceptSuggestionOnEnter": "off",
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": false,
  "emmet.showAbbreviationSuggestions": false,
  "emmet.showExpandedAbbreviation": "always",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "razor": "html",
    "plaintext": "pug"
  },
  "editor.suggest.localityBonus": true,
  "editor.suggestOnTriggerCharacters": true,
  "editor.wordBasedSuggestions": true,
  "editor.parameterHints.cycle": true,
  "editor.parameterHints.enabled": true,
  "editor.tabCompletion": "on",
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },
  // Language integration
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  // "[ruby]": {
  //   "editor.defaultFormatter": "misogi.ruby-rubocop"
  // },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "git.autofetch": true,
  "editor.inlineSuggest.enabled": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "markdown": true,
    "scminput": false,
    "yaml": false
  },
  "liveServer.settings.donotShowInfoMsg": true,
  "ruby.locate": {
    "exclude": "{**/@(test|spec|tmp|.*),**/@(test|spec|tmp|.*)/**,**/*_spec.rb}",
    "include": "{**/*.rb,/Users/bartoszmaka/.asdf/installs/ruby/**/*.rb}"
  },
  "errorLens.messageTemplate": "$source $message $code",
  "editor.minimap.enabled": false,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.settings.openDefaultKeybindings": false,
  "workbench.settings.openDefaultSettings": false,
  "search.showLineNumbers": true,
  "search.smartCase": true,
  "search.useGlobalIgnoreFiles": false,
  "files.hotExit": "off",
  "debug.internalConsoleOptions": "neverOpen",
  "window.title": "${dirty}${rootPath} ${activeEditorMedium}",
  "editor.rulers": [
    81,
    121
  ],
  "files.associations": {
    "*rc": "shellscript"
  },
  "sync.autoUpload": true,
  "sync.quietSync": true,
  "sync.gist": "d3178992e34a264ccfbbe5a26dca40e2",
  // Vim
  "vim.enableNeovim": true,
  "vim.neovimPath": "/opt/homebrew/bin/nvim",
  "vim.disableExtension": false,
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.showcmd": true,
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.highlightedyank.enable": true,
  "vim.useSystemClipboard": true,
  "vim.easymotionMarkerBackgroundColor": "#5f0000",
  "vim.history": 1000,
  "vim.statusBarColorControl": true,
  "vim.handleKeys": {
    "<C-d>": false,
    "<C-e>": false,
  },
  "vim.debug.loggingLevelForConsole": "debug",
  // Macros
  "multiCommand.commands": [
    {
      "command": "multiCommand.replaceWordUnderCursor",
      "sequence": [
        "actions.find",
        "editor.action.startFindReplaceAction"
      ]
    },
    {
      "command": "multiCommand.resetAndGoUp",
      "sequence": [
        "closeFindWidget",
        "extension.vim_escape",
        "workbench.action.focusAboveGroup"
      ]
    },
    {
      "command": "multiCommand.resetAndGoRight",
      "sequence": [
        "closeFindWidget",
        "extension.vim_escape",
        "workbench.action.focusRightGroup"
      ]
    },
    {
      "command": "multiCommand.resetAndGoDown",
      "sequence": [
        "closeFindWidget",
        "extension.vim_escape",
        "workbench.action.focusBelowGroup"
      ]
    },
    {
      "command": "multiCommand.resetAndGoToConsole",
      "sequence": [
        "closeFindWidget",
        "extension.vim_escape",
        "workbench.action.focusBelowGroup"
      ]
    },
    {
      "command": "multiCommand.resetAndGoLeft",
      "sequence": [
        "closeFindWidget",
        "extension.vim_escape",
        "workbench.action.focusLeftGroup"
      ]
    },
    {
      "command": "multiCommand.resetAndGoToExplorer",
      "sequence": [
        "closeFindWidget",
        "extension.vim_escape",
        "workbench.view.explorer"
      ]
    },
  ],
  // Vim mappings
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<leader>",
        "%"
      ],
      "commands": [
        "editor.emmet.action.matchTag"
      ]
    },
    {
      "before": [
        "v"
      ],
      "commands": [
        "editor.action.smartSelect.expand"
      ],
    },
    {
      "before": [
        "V"
      ],
      "commands": [
        "editor.action.smartSelect.shrink"
      ],
    },
    {
      "before": [
        "v",
        "<leader>",
        "h"
      ],
      "after": [
        "^"
      ]
    },
    {
      "before": [
        "v",
        "<leader>",
        "l"
      ],
      "after": [
        "$"
      ]
    },
    {
      "before": [
        "<leader>",
        "h"
      ],
      "after": [
        "^"
      ]
    },
    {
      "before": [
        "<leader>",
        "l"
      ],
      "after": [
        "$"
      ]
    },
    {
      "before": [
        "<S-tab>"
      ],
      "after": [
        "<",
        "g",
        "v"
      ]
    },
    {
      "before": [
        "<tab>"
      ],
      "after": [
        ">",
        "g",
        "v"
      ]
    },
    // {
    //   "before": [
    //     "<leader>",
    //     "y"
    //   ],
    //   "commands": [
    //     "editor.action.clipboardCopyAction"
    //   ]
    // },
    // {
    //   "before": [
    //     "<leader>",
    //     "p"
    //   ],
    //   "commands": [
    //     "editor.action.clipboardPasteAction"
    //   ]
    // },
    {
      "before": [
        "K"
      ],
      "after": [
        "5",
        "k"
      ]
    },
    {
      "before": [
        "J"
      ],
      "after": [
        "5",
        "j"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "-"
      ],
      "commands": [
        "extension.changeCase.kebab"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "."
      ],
      "commands": [
        "extension.changeCase.dot"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "u"
      ],
      "commands": [
        "extension.changeCase.constant"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "s"
      ],
      "commands": [
        "extension.changeCase.snake"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "_"
      ],
      "commands": [
        "extension.changeCase.snake"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "c"
      ],
      "commands": [
        "extension.changeCase.camel"
      ]
    },
    {
      "before": [
        "n"
      ],
      "commands": [
        "extension.vim_escape",
        "editor.action.nextMatchFindAction",
        "extension.vim_escape",
      ]
    },
    {
      "before": [
        "N"
      ],
      "commands": [
        "extension.vim_escape",
        "editor.action.previousMatchFindAction",
        "extension.vim_escape",
      ]
    },
    {
      "before": [
        "<BS>"
      ],
      "commands": [
        ":nohl",
        "closeFindWidget"
      ]
    }
  ],
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": [
        "j",
        "k"
      ],
      "after": [
        "<esc>"
      ]
    },
    {
      "before": [
        "<C-e>"
      ],
      "commands": [
        "editor.emmet.action.expandAbbreviation"
      ]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": [ // set easymotion prefix to ;
        "V",
        ";",
      ],
      "after": [
        "V",
        "leader",
        "leader",
      ]
    },
    {
      "before": [ // set easymotion prefix to ;
        "v",
        ";",
      ],
      "after": [
        "v",
        "leader",
        "leader",
      ]
    },
    {
      "before": [ // set easymotion prefix to ;
        ";",
      ],
      "after": [
        "leader",
        "leader",
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "leader",
        "c",
        "-"
      ],
      "commands": [
        "extension.changeCase.kebab"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "."
      ],
      "commands": [
        "extension.changeCase.dot"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "u"
      ],
      "commands": [
        "extension.changeCase.constant"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "s"
      ],
      "commands": [
        "extension.changeCase.snake"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "_"
      ],
      "commands": [
        "extension.changeCase.snake"
      ]
    },
    {
      "before": [
        "leader",
        "c",
        "c"
      ],
      "commands": [
        "extension.changeCase.camel"
      ]
    },
    {
      "before": [
        "leader",
        "w"
      ],
      "after": [
        "leader",
        "leader",
        "w"
      ],
    },
    {
      "before": [
        "leader",
        "b"
      ],
      "after": [
        "leader",
        "leader",
        "b"
      ],
    },
    {
      "before": [
        "leader",
        "e"
      ],
      "after": [
        "leader",
        "leader",
        "b"
      ],
    },
    {
      "before": [
        "u"
      ],
      "commands": [
        "undo"
      ]
    },
    {
      "before": [
        "<C-r>"
      ],
      "commands": [
        "redo"
      ]
    },
    {
      "before": [
        "leader",
        "r"
      ],
      "commands": [
        "actions.find",
        "editor.action.startFindReplaceAction"
      ]
    },
    {
      "before": [
        "v"
      ],
      "after": [
        "v"
      ],
    },
    {
      "before": [
        "*"
      ],
      "commands": [
        "actions.find",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    {
      "before": [
        "leader",
        "F"
      ],
      "commands": [
        "actions.find"
      ]
    },
    {
      "before": [
        "leader",
        "f"
      ],
      "commands": [
        "actions.find"
      ]
    },
    {
      "before": [
        "/"
      ],
      "commands": [
        "actions.find"
      ]
    },
    {
      "before": [
        "n"
      ],
      "commands": [
        "extension.vim_escape",
        "editor.action.nextMatchFindAction",
        "extension.vim_escape",
      ]
    },
    {
      "before": [
        "N"
      ],
      "commands": [
        "extension.vim_escape",
        "editor.action.previousMatchFindAction",
        "extension.vim_escape",
      ]
    },
    {
      "before": [
        "<BS>"
      ],
      "commands": [
        ":nohl",
        "closeFindWidget"
      ]
    },
    {
      "before": [
        "g",
        "r"
      ],
      "commands": [
        "editor.action.referenceSearch.trigger"
      ]
    },
    {
      "before": [
        "K"
      ],
      "after": [
        "5",
        "k"
      ]
    },
    {
      "before": [
        "J"
      ],
      "after": [
        "5",
        "j"
      ]
    },
    {
      "before": [
        "leader",
        "%"
      ],
      "commands": [
        "editor.emmet.action.matchTag"
      ]
    },
    {
      "before": [
        "[",
        "e"
      ],
      "commands": [
        "editor.action.marker.prev"
      ],
    },
    {
      "before": [
        "]",
        "e"
      ],
      "commands": [
        "editor.action.marker.next"
      ],
    },
    {
      "before": [
        "[",
        "g"
      ],
      "commands": [
        "workbench.action.compareEditor.previousChange",
        "workbench.action.editor.previousChange"
      ],
    },
    {
      "before": [
        "]",
        "g"
      ],
      "commands": [
        "workbench.action.compareEditor.nextChange",
        "workbench.action.editor.nextChange"
      ],
    },
    {
      "before": [
        ":"
      ],
      "commands": [
        "vim.showQuickpickCmdLine"
      ]
    },
    {
      "before": [
        "leader",
        "K"
      ],
      "commands": [
        "editor.action.showHover"
      ],
    },
    {
      "before": [
        "<C-w>",
        "m"
      ],
      "commands": [
        "workbench.action.maximizeEditor"
      ]
    },
    {
      "before": [
        "leader",
        "h"
      ],
      "after": [
        "^"
      ]
    },
    {
      "before": [
        "leader",
        "l"
      ],
      "after": [
        "$"
      ]
    },
    {
      "before": [
        "leader",
        "j"
      ],
      "after": [
        "i",
        "<CR>",
        "<Esc>"
      ]
    },
    {
      "before": [
        "leader",
        "k"
      ],
      "after": [
        "k",
        "J"
      ]
    },
    {
      "before": [
        "leader",
        "a"
      ],
      "commands": [
        {
          "command": "alternate.createAlternateFile"
        }
      ]
    },
    {
      "before": [
        "leader",
        "s"
      ],
      "commands": [
        {
          "command": "alternate.createAlternateFileInSplit"
        }
      ]
    },
    {
      "before": [
        "leader",
        "t",
        "t"
      ],
      "commands": [
        "extension.runLineOnRspec"
      ]
    },
    {
      "before": [
        "leader",
        "t",
        "f"
      ],
      "commands": [
        "extension.runFileOnRspec"
      ]
    },
    { // option + j on my keyboard
      "before": [
        "∆",
      ],
      "commands": [
        "editor.action.insertCursorBelow"
      ]
    },
    { // option + k on my keyboard
      "before": [
        "Ż",
      ],
      "commands": [
        "editor.action.insertCursorAbove"
      ]
    },
    {
      "before": [
        "leader",
        "g",
        "h",
      ],
      "commands": [
        "editor.action.peekDefinition"
      ]
    },
  ],
  "editor.unicodeHighlight.nonBasicASCII": false,
  "[ruby]": {
    "editor.defaultFormatter": "Shopify.ruby-lsp"
  },
  "errorLens.enabledDiagnosticLevels": [
    "warning",
    "info"
  ],
}

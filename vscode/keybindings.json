// Place your key bindings in this file to overwrite the defaults
[
  // Disable default mapping
  {
    "key": "shift+tab",
    "command": "-extension.vim_shift+tab",
    "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "cmd+q",
    "command": "-workbench.action.quit"
  },
  { 
    "key": "cmd+q",
    "command": "workbench.action.closeEditorsInGroup",
    "when": "editorFocus && vim.mode == 'Normal'"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "ctrl+shift+cmd+q",
    "command": "workbench.action.closeWindow",
  },
  // Shell like shortcuts
  // {
  //   "key": "ctrl+u",
  //   "command": "deleteAllLeft",
  //   "when": "textInputFocus && !editorReadonly"
  // },
  // {
  //   "key": "ctrl+e",
  //   "command": "cursorLineEnd",
  //   "when": "textInputFocus"
  // },
  // {
  //   "key": "ctrl+e",
  //   "command": "cursorEnd",
  //   "when": "textInputFocus"
  // },
  // vim like find
  {
    "key": "enter",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "editorFocus && findWidgetVisible && vim.mode != 'Insert'"
  },
  // Jump on global search results
  {
    "key": "ctrl+n",
    "command": "goToNextReferenceFromEmbeddedEditor",
    "when": "inReferenceSearchEditor"
  },
  {
    "key": "ctrl+p",
    "command": "goToPreviousReferenceFromEmbeddedEditor",
    "when": "inReferenceSearchEditor"
  },
  {
    "key": "ctrl+n",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult"
  },
  {
    "key": "ctrl+p",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult"
  },

  // Terminal
  {
    "key": "ctrl+`",
    "command": "workbench.action.togglePanel"
  },
  // does not work for some reason
  {
    "key": "ctrl+l ctrl+n",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+l ctrl+n",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+w v",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },

  // Search
  {
    "key": "ctrl+k ctrl+f",
    "command": "workbench.action.findInFiles",
  },
  {
    "key": "ctrl+k ctrl+f",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "searchViewletVisible && sideBarFocus"
  },
  {
    "key": "shift+cmd+f",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "searchViewletVisible && sideBarFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "search.action.focusNextSearchResult",
    "when": "searchViewletVisible"
  },
  {
    "key": "ctrl+shift+k",
    "command": "search.action.focusPreviousSearchResult",
    "when": "searchViewletVisible"
  },
  // Errors
  {
    "key": "ctrl+l ctrl+e",
    "command": "workbench.action.tasks.toggleProblems",
  },
  {
    "key": "ctrl+l ctrl+e",
    "command": "workbench.action.tasks.toggleProblems",
    "when": "searchViewletVisible && sideBarFocus"
  },

  // Git
  {
    "key": "ctrl+k ctrl+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+k ctrl+g",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "activeViewlet == 'workbench.view.scm' && sideBarFocus"
  },

  // Explorer
  // {
  //   "key": "ctrl+k ctrl+d",
  //   "command": "workbench.files.action.showActiveFileInExplorer",
  //   "when": "!explorerViewletVisible"
  // },
  // {
  //   "key": "ctrl+k ctrl+d",
  //   "command": "workbench.action.toggleSidebarVisibility",
  //   "when": "!editorTextFocus && explorerViewletVisible"
  // },
  {
    "key": "ctrl+k ctrl+e",
    "command": "workbench.view.explorer",
  },
  {
    "key": "ctrl+k ctrl+e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletVisible"
  },
  {
    "key": "m m",
    "command": "renameFile",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "m p",
    "command": "copyFilePath",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "m d",
    "command": "deleteFile",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "m a",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.toggleExpand",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.select",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "s",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "shift+x",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "y p",
    "command": "fileutils.duplicateFile",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },

  // Make
  {
    "key": "ctrl+m ctrl+d",
    "command": "workbench.action.debug.start",
    "when": "!inDebugMode"
  },
  {
    "key": "ctrl+m ctrl+d",
    "command": "workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+m ctrl+s",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+m ctrl+r",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  // Other
  {
    "key": "cmd+r",
    "command": "multiCommand.replaceWordUnderCursor",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+m ctrl+m",
    "command": "editor.action.toggleMinimap",
    "when": "editorFocus"
  },
  // {
  //   "key": "ctrl+m ctrl+f",
  //   "command": "eslint.executeAutofix",
  //   "when": "editorFocus && editorLangId == 'javascript'"
  // },
  // {
  //   "key": "ctrl+m ctrl+f",
  //   "command": "eslint.executeAutofix",
  //   "when": "editorFocus && editorLangId == 'javascriptreact'"
  // },
  {
    "key": "ctrl+m ctrl+f",
    "command": "editor.action.formatDocument",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+h",
    "command": "multiCommand.resetAndGoLeft"
  },
  {
    "key": "cmd+j",
    "command": "multiCommand.resetAndGoDown"
  },
  {
    "key": "cmd+k",
    "command": "multiCommand.resetAndGoUp"
  },
  {
    "key": "cmd+l",
    "command": "multiCommand.resetAndGoRight"
  },
  {
    "key": "ctrl+g ctrl+b",
    "command": "gitlens.toggleFileBlame"
  },
  {
    "key": "ctrl+g ctrl+d",
    "command": "gitlens.diffWithRevision"
  },
  {
    "key": "ctrl+r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  // fuzzy search
  {
    "key": "ctrl+p ctrl+s",
    "command": "workbench.action.gotoSymbol"
  },
  // {
  //   "key": "space p",
  //   "command": "workbench.action.quickOpen"
  // },
  {
    "key": "ctrl+p ctrl+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p ctrl+g",
    "command": "gitlens.showQuickRepoStatus"
  },
  {
    "key": "ctrl+e",
    "command": "insertSnippet"
  },
  {
    "key": "ctrl+e",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorHasSelection"
  },
  {
    "key": "ctrl+e",
    "command": "jumpToNextSnippetPlaceholder",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "key": "shift+ctrl+e",
    "command": "jumpToPrevSnippetPlaceholder",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  // {
  //   "key": "cmd+q",
  //   "command": "workbench.action.closeEditorsInGroup",
  //   "when": "multipleEditorGroups"
  // },
  {
    "key": "[F12]",
    "command": "workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+x",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+x",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  // use default cmd+shift+1 for now 
  // {
  //   "key": "ctrl+m",
  //   "command": "editor.action.replaceOne",
  //   "when": "!inputFocus && editorFocus && findWidgetVisible && vim.mode =! 'Input'"
  // },
  // {
  //   "key": "ctrl+m",
  //   "command": "search.action.replace",
  //   "when": "!inputFocus && matchFocus && replaceActive && searchViewletVisible && vim.mode == 'Normal'"
  // },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen && activeViewlet =! 'workbench.view.explorer"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible && activeViewlet =! 'workbench.view.explorer"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible && activeViewlet =! 'workbench.view.explorer"
  },
  {
    "key": "ctrl+h",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus && activeViewlet =! 'workbench.view.explorer" 
  },
  {
    "key": "ctrl+l",
    "command": "list.expand",
    "when": "listFocus && !inputFocus && activeViewlet =! 'workbench.view.explorer"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus && activeViewlet =! 'workbench.view.explorer"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus && activeViewlet =! 'workbench.view.explorer"
  },
  {
    "key": "ctrl+e",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "editorFocus && vim.active && !inDebugRepl && vim.mode == 'Insert'"
  },
  // {
  //   "key": "shift+'",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "\"$1\""
  //   }
  // },
  // {
  //   "key": "'",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "'$1'"
  //   }
  // }
]

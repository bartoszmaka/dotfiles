{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"console.log": {
		"prefix": "cl",
		"description": "Log output to console",
		"body": [
			"console.log($1)",
			"$2"
		]
	},
	"export const": {
		"prefix": "ec",
		"body": "export const",
		"description": "export const"
	},
	"export default const": {
		"prefix": "edc",
		"body": "export default const",
		"description": "export default const"
	},
	"export default": {
		"prefix": "ed",
		"body": "export default",
		"description": "export default"
	},
	"jest describe": {
		"prefix": "desc",
		"description": "jest describe block",
		"body": [
			"describe('$1', () => {",
			"  $2",
			"});"
		]
	},
	"jest it": {
		"prefix": "it",
		"description": "jest it block",
		"body": [
			"it('$1', () => {",
			"  $2",
			"});"
		]
	},
	"jest test": {
		"prefix": "test",
		"description": "jest test block",
		"body": [
			"test('$1', () => {",
			"  $2",
			"});"
		]
	},
	"jest array containing object": {
		"prefix": "teao",
		"description": "to equal array containing object matching",
		"body": [
			".toEqual(",
			"  expect.arrayContaining([",
			"    expect.objectContaining({",
			"      $1",
			"    })",
			"  ])",
			")"
		]
	},
	"arrow function": {
		"prefix": "fn",
		"description": "arrow function",
		"body": [
			"($1) => {",
			"  $2",
			"}"
		]
	}
}
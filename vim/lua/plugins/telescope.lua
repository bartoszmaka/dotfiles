return {}
-- return {
--   {
--     'nvim-telescope/telescope.nvim',
--     tag = '0.1.3',
--     dependencies = {
--       { 'nvim-telescope/telescope-fzf-native.nvim', build = 'make' },
--       { 'fhill2/telescope-ultisnips.nvim' },
--       { 'nvim-lua/plenary.nvim' },
--       { 'pbogut/fzf-mru.vim' }
--     },
--     config = function()
--       local telescope = require('telescope')
--       local helper = require('helper')
--       local nnoremap = helper.nnoremap
--       local actions = require('telescope.actions')
--       local action_layout = require("telescope.actions.layout")

--       telescope.setup {
--         defaults = {
--           sorting_strategy = 'ascending',
--           layout_config = {
--             height = 0.68,
--             width = 0.9,
--             prompt_position = 'top',
--             preview_cutoff = 150,
--           },
--           cycle_layout_list = {
--             'cursor',
--             {
--               layout_strategy = '',
--               previewer = true,
--               layout_config = {
--                 height = 1,
--                 preview_cutoff = 40,
--                 prompt_position = "top",
--                 width = 1
--               }
--             }
--           },
--           mappings = {
--             i = {
--               ["<esc>"] = actions.close,
--               ["<C-u>"] = false,
--               ["<C-e>"] = false,
--               ["<F4>"] = action_layout.toggle_preview,
--               ["<C-[>"] = actions.cycle_previewers_next,
--               ["<C-]>"] = actions.cycle_previewers_prev,
--               ["<F2>"] = action_layout.cycle_layout_next,
--             },
--             n = {
--               ["<esc>"] = actions.close,
--               ["<F4>"] = action_layout.toggle_preview
--             },
--           },
--         },
--         extensions = {
--           fzf = {
--             fuzzy = true,                   -- false will only do exact matching
--             override_generic_sorter = true, -- override the generic sorter
--             override_file_sorter = true,    -- override the file sorter
--             case_mode = "smart_case",       -- or "ignore_case" or "respect_case"
--           },
--         }
--       }
--       telescope.load_extension('fzf')
--       telescope.load_extension('fzf_mru')
--       telescope.load_extension('ultisnips')

--       -- nnoremap('<C-p><C-p>', [[<Cmd>lua require('telescope.builtin').find_files()<CR>]])
--       -- nnoremap('<C-p><C-r>', ':Telescope fzf_mru')

--       -- nnoremap('<leader>pp', [[<Cmd>lua require('telescope.builtin').find_files()<CR>]])
--       -- nnoremap('<leader>pr', [[<Cmd>lua require('telescope.builtin').oldfiles()<CR>]])
--       -- nnoremap('<leader>pf', [[<Cmd>lua require('telescope.builtin').live_grep()<CR>]])
--       -- nnoremap('<leader>pv', [[<Cmd>lua require('telescope.builtin').git_bcommits()<CR>]])
--       -- nnoremap('<leader>pm', [[<Cmd>lua require('telescope.builtin').marks()<CR>]])
--       -- nnoremap('<leader>pc', [[<Cmd>lua require('telescope.builtin').git_bcommits()<CR>]])

--       -- nnoremap('<C-p><C-g>', [[<Cmd>lua require('telescope.builtin').git_status()<CR>]])
--       -- nnoremap('<C-p><C-b>', [[<Cmd>lua require('telescope.builtin').find_buffers()<CR>]])
--     end
--   },
-- }

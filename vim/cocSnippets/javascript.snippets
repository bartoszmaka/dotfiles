# A valid snippet should starts with:
#
#		snippet trigger_w ["description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-w expansion.
#		w - w boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter"emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet switch "switch statement" w
switch (${1}) {
  case ${2}:
}
endsnippet

snippet if "if statement" w
if (${1}) {
  ${2}
}
endsnippet

snippet ita "jest it async" w
it('${1}', async () => {
  ${2}
});
endsnippet

snippet it "jest it" w
it('${1}', () => {
  ${2}
});
endsnippet

snippet de  "jest describe" w
describe('${1}', () => {
  ${2}
});
endsnippet

snippet desc  "jest describe" w
describe('${1}', () => {
  ${2}
});
endsnippet

snippet con "desctucture object" w
const { ${1} } = ${2}
endsnippet

snippet re "require()" w
const ${1} = require('${2}');
endsnippet

snippet imp "import module from " w
import ${1:moduleName} from '${0:module}';
endsnippet

snippet e "export" w
export 
endsnippet

snippet c "const" w
const 
endsnippet

snippet ed "export default" w
export default 
endsnippet

snippet ec "export const" w
export const 
endsnippet

snippet edc "export default const" w
export default const 
endsnippet

snippet cl "console.log" w
console.log(${1})
endsnippet

snippet ct "constructor" w
constructor(${1}) {
  ${2}
}
endsnippet

snippet ctr "component constructor" w
constructor(props) {
  super(props);
  ${1}
}
endsnippet

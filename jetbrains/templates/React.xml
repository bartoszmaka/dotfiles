<templateSet group="React">
  <template name="scfn" value="import React from 'react';&#10;&#10;const $COMPONENT$ = (props) =&gt; {&#10;  return (&#10;    &lt;pre&gt;{JSON.stringify(props, null, 2)}&lt;/pre&gt;&#10;  )&#10;}&#10;&#10;export default $COMPONENT$" description="fn component" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="scfnpt" value="import React from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;const $COMPONENT$ = (props) =&gt; {&#10;  return (&#10;    &lt;pre&gt;{JSON.stringify(props, null, 2)}&lt;/pre&gt;&#10;  )&#10;}&#10;&#10;$COMPONENT$.propTypes = {&#10;&#10;};&#10;&#10;export default $COMPONENT$" description="fn component with prop types" toReformat="true" toShortenFQNames="true">
    <variable name="COMPONENT" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="us" value="const [$state$, set$setState$] = useState($END$)" description="useState" toReformat="true" toShortenFQNames="true">
    <variable name="state" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="setState" expression="capitalize(state)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>
priority 80
global !p
def upperfirst(t):
	if len(t) < 2:
		return '' if len(t) < 1 else t.capitalize()
	return t[0].capitalize() + t[1:]

def lowerdash(t):
	return '-'.join([ w.lower() for w in re.findall('[a-z]+|[A-Z]+[a-z]*', t) ])

def getNameFromPath():
	parts = vim.eval('expand("%:.")').split('.')[0].split('/')
	last = parts.pop()
	if last.endswith('_spec'): last = last[:-5]

	return last.replace("_", " ").title().replace(" ", "")
endglobal

snippet us "useState" w
const [$1, set`!p snip.rv=upperfirst(t[1])`] = useState<$3>($2)
endsnippet

snippet scfn
function ${1}(): React.FC {
  return (
    <pre>{JSON.stringify(props, null, 2)}</pre>
  )
}

export default $1
endsnippet

snippet scfni
interface $1Props {
	$2
}

function ${1}(${2:props}: $1Props): React.FC {
  return (
    <pre>{JSON.stringify(props, null, 2)}</pre>
  )
}

export default $1
endsnippet

snippet to "ternary operator" w
${1:true} ? (${2:null}) : (${3:null})
endsnippet

# snippet scfnn
# function ${1}: React.FC = (${2:props}: $1Props) => {
#   return (
#     <pre>{JSON.stringify(props, null, 2)}</pre>
#   )
# }

# export default $1
# endsnippet

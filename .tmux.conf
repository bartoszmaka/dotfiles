set -g default-shell /bin/zsh
set -g default-terminal 'screen-256color'
set -ga terminal-overrides ",xterm-256color:Tc"

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'erikw/tmux-powerline'
# set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'dominikduda/tmux-copydog'
# set -g @plugin "jlipps/tmux-safekill"
# set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'

# meta options
set -g escape-time 0
set -g focus-events on
set -g history-limit 20000
set -g mouse on
set -g base-index 1
set -g renumber-windows on
set -g set-clipboard off
set -s set-clipboard off
set-window-option -g mode-keys vi
set-window-option -g pane-base-index 1
set -g @scroll-down-exit-copy-mode "on"

# statusline config
set -g status on
set -g status-interval 1
set -g status-justify "left"
set -g status-left-length 20
set -g status-left-length 140
set -g status-bg "#262626"
set -g status-left "#[fg=#262626, bg=#E5C07B] %m/%d  %H:%M  #[fg=#E5C07B, bg=#262626]"
set -g status-right "#(~/.tmux/plugins/tmux-powerline/powerline.sh right)"
set-window-option -g window-status-format "#[fg=#E5C07B, bg=#262626]  #I #W  "
set-window-option -g window-status-current-format "#[fg=#262626, bg=#E5C07B]#[fg=#262626, bg=#E5C07B] #I #W #[fg=#E5C07B, bg=#262626]"

# Vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind C-l send-keys C-l
bind -n C-l send-keys C-l

# bindings
set -g prefix C-space
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# when creating new panes / windows use current pane path instead of one where tmux was launched
bind C new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# plugins config
set -g @copycat_search_e '(Error|FATAL)'

# copying
bind 'v' copy-mode
bind-key -T prefix 'p' paste-buffer

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "xclip -in -selection clipboard" \; send -X clear-selection \; display 'Copied to clipboard'
bind-key -T copy-mode-vi 'Y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard" \; display 'Copied to clipboard'
bind-key -T copy-mode-vi Escape send -X clear-selection
bind '/' copy-mode \; command-prompt -i -p "search down" "send -X search-backward-incremental \"%%%\""
bind '?' copy-mode \; command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi 'N' run-shell "/home/bartosz/.tmux/plugins/tmux-copycat/scripts/copycat_jump.sh 'prev'" \; send -X search-reverse
bind-key -T copy-mode-vi 'n' run-shell "/home/bartosz/.tmux/plugins/tmux-copycat/scripts/copycat_jump.sh 'next'" \; send -X search-again

bind-key -T copy-mode-vi 'u' copy-mode \; send -X scroll-up
bind-key -T copy-mode-vi 'd' copy-mode \; send -X scroll-down
bind-key -T copy-mode-vi 'C-b' send-keys -X page-up \; send-keys -X middle-line
bind-key -T copy-mode-vi 'C-f' send-keys -X page-down \; send-keys -X middle-line

bind-key -T root MouseDrag1Pane if-shell -F -t = '#{mouse_any_flag}' "if -Ft= '#{pane_in_mode}' 'copy-mode -M' 'send-keys -M' " "copy-mode -M"
# Copy selection on left mouse button release and display message
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe "xclip -in -selection clipboard" \; display 'Copied to clipboard'
bind-key -T copy-mode-vi TripleClick1Pane select-pane \; copy-mode \; send-keys -X select-line \; send -X copy-pipe "xclip -in -selection clipboard"

# Select word under cursor on double left mouse click and copy it unless clicked pane contains vim
bind-key -n -T root DoubleClick1Pane if-shell "$is_vim" 'send-keys -M' 'select-pane ; copy-mode ; send-keys -X select-word ; send -X copy-pipe "xclip -in -selection clipboard"'

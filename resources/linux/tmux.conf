is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
color_black="#1D2128"
color_yellow="#E5C07B"
light_separator="#[bg=$color_black,fg=$color_yellow]│#[default]"
separator="#[bg=$color_black,fg=$color_yellow]#[default]"
separator_reverse="#[bg=$color_yellow,fg=$color_black]#[default]"
spotify="#[bg=$color_black,fg=$color_yellow] #(osascript ~/.tmux/scripts/spotify.scpt) #[default]"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'erikw/tmux-powerline'

# Settings
set -g default-shell /bin/zsh
set -g default-terminal 'screen-256color'
set -ga terminal-overrides ",xterm-256color:Tc"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
set -g monitor-silence 0
set -g escape-time 500
set -g focus-events off
set -g history-limit 20000
set -g mouse on
set -g base-index 1
set -g renumber-windows on
set -s set-clipboard off
setw -g mode-keys vi
setw -g pane-base-index 1

# Bindings
set -g prefix C-space
# use system clipboard
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# bind h run-shell "if [ $(tmux display-message -p '#{pane_at_left}') -ne 1 ]; then tmux select-pane -L; fi"
# bind j run-shell "if [ $(tmux display-message -p '#{pane_at_bottom}') -ne 1 ] ; then tmux select-pane -D; fi"
# bind k run-shell "if [ $(tmux display-message -p '#{pane_at_top}') -ne 1 ]; then tmux select-pane -U; fi"
# bind l run-shell "if [ $(tmux display-message -p '#{pane_at_right}') -ne 1 ]; then tmux select-pane -R; fi"
bind h if-shell "$is_vim" "send-keys C-w h"  "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-w j"  "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-w k"  "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-w l"  "select-pane -R"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind C-f resize-pane -Z
bind C-w kill-pane
bind -n M-\{ previous-window
bind -n M-\} next-window

# when creating new panes / windows use current pane path instead of one where tmux was launched
bind r display-message "current root: #{pane_current_path}"
bind A attach-session -c "#{pane_current_path}" \; display-message "root set to: #{pane_current_path}"
bind C new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind @ choose-window 'join-pane -h -s "%%"'
bind ! choose-window 'break-pane'
bind ` choose-window 'swap-window -t "%%"'

# Display
# battery="#[bg=$color_black,fg=$color_yellow] #(pmset -g batt | ruby ~/.tmux/scripts/battery.rb) #[default]"
set -g status on
set -g status-position top
set -g status-interval 5
set -g status-justify "left"
set -g status-left-length 60
set -g status-right-length 250
set -g status-bg $color_black
set -g status-fg $color_yellow

set -g status-left "        #[default]"
set -g status-right "#(~/.tmux/plugins/tmux-powerline/powerline.sh right)"

setw -g window-status-format " #[fg=$color_yellow, bg=$color_black] #I #W #F  "
setw -g window-status-current-format "$separator_reverse#[fg=$color_black, bg=$color_yellow] #I #W #F $separator"

run '~/.tmux/plugins/tpm/tpm'
